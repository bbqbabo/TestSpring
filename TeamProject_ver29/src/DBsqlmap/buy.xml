<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
                "http://ibatis.apache.org/dtd/sql-map-2.dtd">
               

<!--
    
    SqlMapConfig.xml 파일에서 namespace사용을 true로 변경하였기 때문에 이 XML의 네임스페이스를
    IbatisBoard로 정의합니다.

typeAlias태그는 type에 선언된 클래스 파일을 짧은이름으로 치환해 주는 역할을 합니다.
        즉 net....IbatisBoardVO란 java파일을 이 xml에서는 Board란 이름으로 사용하겠다는 뜻입니다

  실제 사용할 쿼리 문입니다.
        select 시에는 select,
        delete 시에는 delete
        update 시에는 update 태그를 사용하여 쿼리문을 생성합니다.
        이때 id는 필수 요소 입니다. 이 아이디를 통해 쿼리문을 접근할 수 있습니다.
        resultClass="Board" 는 아래 쿼리문을 통해 select된 데이터를 Board 클래스에 자동으로 저장하겠다는 뜻이고,
         이 Board클래스는 상단의 typeAlias를 통해 alias시킨 것임으로 결국 IbatisBoardVO에 자동으로 저장될 것입니다.
        


출처: http://krespo.net/101 [KRESPO.NET]
		
		
		
//	create table ex_post(
//			num int primary key auto_increment,
//			subject varchar(30) not null,
//			content varchar(100) not null,
//			regdate timestamp null default current_timestamp
//			);
	

-->




<sqlMap namespace="IbatisEx_buy">


	<typeAlias alias="bdto" type="bean.buyDto"/><!--dao.get함수  -->
  
	 <select id="getall" resultClass="bdto">
	 	
	 	SELECT 	*
	 		 
	 	
	 	FROM 
	 		sboard
	 	
	 
	 </select>
	
	<select id="articleRead" resultClass="bdto">
		SELECT DISTINCT *
		FROM 
			sboard
		WHERE
			name=#name#
	
	</select>
	<delete id="articleDel" parameterClass="java.lang.String">
		DELETE 
		FROM 
			sboard
		WHERE
			name=#name#
	
	</delete>
	<update id="articleUpdate" >
		SELECT DISTINCT *
		FROM 
			sboard
		WHERE
			name=#name#
	
	</update>
	


</sqlMap>






