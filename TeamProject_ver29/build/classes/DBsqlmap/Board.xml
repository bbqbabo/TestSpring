<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
                "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<!--
    SqlMapConfig.xml 파일에서 namespace사용을 true로 변경하였기 때문에 이 XML의 네임스페이스를
    IbatisUser로 정의합니다.
-->
<sqlMap namespace="IbatisBoard">
    <!--
        typeAlias태그는 type에 선언된 클래스 파일을 짧은이름으로
         치환해 주는 역할을 합니다.
        즉 bean.User란 java파일을 
        이 xml에서는 User란 이름으로 사용하겠다는 뜻입니다
    -->
    <typeAlias alias="BoardDto_Tip" type="bean.BoardDto_Tip"/> 
    <typeAlias alias="BoardDto_Qna" type="bean.BoardDto_Qna"/> 
    <typeAlias alias="BoardDto_Free" type="bean.BoardDto_Free"/> 
    
    <!-- 당연히 우리가 만든 클래스가 아니여도 별명을 지어줄 수 있습니다!!! -->
    <typeAlias alias="String" type="java.lang.String"/> 
    <!--
        실제 사용할 쿼리 문입니다.
        select 시에는 select,
        delete 시에는 delete
        update 시에는 update 태그를 사용하여 쿼리문을 생성합니다.
        이때 id는 필수 요소 입니다. 이 아이디를 통해 쿼리문을 접근할 수 있습니다.
        resultClass="Board" 는 아래 쿼리문을 통해 select된 데이터를 
        Board 클래스에 자동으로 저장하겠다는 뜻이고, 
        이 Board클래스는 상단의 typeAlias를 통해 alias시킨 것임으로 
        결국 IbatisBoardVO에 자동으로 저장될 것입니다.
         parameterClass 데이터를 입력받고 리턴할 클래스를 정함.
    -->
    <!--    SQL쿼리를 구분할 id값           결과값의 타입                 전달인자 타입(위에 <typeAlias에서 지어준 별명으로 타입명 설정 가능!!)  -->
    
    <select id="getList_Tip" resultClass="BoardDto_Tip" parameterClass="String">
        SELECT
             *
        FROM
            board_Tip
            
    </select>
    
    <select id="getRead_Tip" resultClass="BoardDto_Tip" parameterClass="java.lang.Integer">
        SELECT
             *
        FROM
            board_Tip
            
        WHERE 
        	Num=#num#
            
    </select>
    
    <update id="update_Tip" parameterClass="BoardDto_Tip">
    	UPDATE 
    		board_Tip
    	SET
    		Content= #Content#,
    		Subject= #Subject#
    	WHERE
    		Num=#Num#
    </update>
    <!-- Tip_Board -->
    
    
    <select id="getList_Free" resultClass="BoardDto_Free" parameterClass="String">
        SELECT
             *
        FROM
            board_Free
            
    </select>
    
    <select id="getRead_Free" resultClass="BoardDto_Free" parameterClass="java.lang.Integer">
        SELECT
             *
        FROM
            board_Free
            
        WHERE 
        	Num=#num#
            
    </select>
    
    <update id="update_Free" parameterClass="BoardDto_Free">
    	UPDATE 
    		board_Free
    	SET
    		Content= #Content#,
    		Subject= #Subject#
    	WHERE
    		Num=#Num#
    </update>
    <!-- Free_Board -->
    
    <select id="getList_Qna" resultClass="BoardDto_Qna" parameterClass="String">
        SELECT
             *
        FROM
            board_Qna
            
    </select>
    
    <select id="getRead_Qna" resultClass="BoardDto_Qna" parameterClass="java.lang.Integer">
        SELECT
             *
        FROM
            board_Qna
            
        WHERE 
        	Num=#num#
            
    </select>
    
    <update id="update_Qna" parameterClass="BoardDto_Free">
    	UPDATE 
    		board_Qna
    	SET
    		Content= #Content#,
    		Subject= #Subject#
    	WHERE
    		Num=#Num#
    </update>
    <!-- Qna_Board -->
    
    
    
    <!-- 인자는 #dto변수명# 형식으로 -->
    
    <!-- <select id="getUser_Nickname" resultClass="int" parameterClass="java.lang.String">
        SELECT
             count(*)
        FROM
            User
        WHERE
            Nickname = #Nickname#
    </select>
    
    <insert id="insertUser" parameterClass="User">
        INSERT
        INTO
            User (ID,Password,Name,Jumin,Nickname,Address,Member_pic,Phonenum,Email,Height,Weight)
        VALUES
            (#ID#,#Password#,#Name#,#Jumin#,#Nickname#,#Address#,#Member_pic#,#Phonenum#,#Email#,#Height#,#Weight#)
    </insert>
    
    <select id="getPw" resultClass="String" parameterClass="String">
    	SELECT
    		Password
    	FROM
    		User
    	WHERE
    		ID = #id#
    
    </select>
    
    <delete id="deleteUser" parameterClass="String">
  
       DELETE FROM
          User
       WHERE 
          ID=         #ID#
    
    </delete> -->
</sqlMap>